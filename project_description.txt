**Project title:** `yelp-mongodb-analytics`

**Goal:**
Build a small end-to-end data pipeline that fetches real business data from the **Yelp Fusion API**, stores it as nested JSON documents in **MongoDB Atlas**, and performs exploratory analysis to uncover insights about restaurant ratings, categories, and pricing across major U.S. cities.

**Key features to implement:**

1. **Data ingestion**

   * Python script using `requests` to call the Yelp API (`/businesses/search` endpoint).
   * Pull ~50 restaurants per city for 3–5 major cities.
   * Store results in MongoDB using `pymongo`.
   * Each document should include nested structures (`categories`, `location`, `coordinates`, etc.).

2. **Configuration & environment**

   * Use a `.env` file (loaded via `python-dotenv`) for API key and MongoDB connection string.
   * Include `.env.example`.
   * Add `requirements.txt` with core dependencies: `requests`, `pymongo`, `pandas`, `matplotlib`, `python-dotenv`.

3. **Query & analysis module**

   * Implement reusable aggregation pipelines in a separate module (e.g. `src/query_mongodb.py`) for:

     * Average rating per category.
     * Distribution of price levels.
     * Correlation between review count and rating.

4. **Exploratory notebook**

   * `notebooks/analysis.ipynb` that imports query functions, loads data into Pandas, and visualizes:

     * Top categories by average rating (bar chart).
     * Rating vs. review count (scatter plot).
     * Rating distribution by price level.

5. **Project structure:**

   ```
   yelp-mongodb-analytics/
   ├── src/
   │   ├── config.py
   │   ├── ingest_yelp.py
   │   ├── query_mongodb.py
   │   └── utils.py
   ├── notebooks/
   │   └── analysis.ipynb
   ├── data/
   ├── requirements.txt
   ├── .env.example
   └── README.md
   ```

6. **README.md contents:**

   * Project overview and objective.
   * Installation instructions.
   * Quickstart guide (run ingestion → open notebook).
   * Example outputs (charts or screenshots).
   * Short note on business relevance: “This analysis helps identify which restaurant categories perform best in each city, providing insights into customer preferences and market opportunities.”

**Stretch goals:**

* Add a small Streamlit dashboard to visualize top categories by city.
* Implement geospatial aggregation (density of restaurants per location).
* Export aggregated summaries to CSV in `data/summary/`.

